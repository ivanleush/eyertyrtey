import telebot
from config import TOKEN, CHANNEL_ID_1, CHANNEL_LINK_1, CHANNEL_ID_2, CHANNEL_LINK_2
from handlers import menu_handlers, callback_handlers
from utils import check_subscription
import logging

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")  # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫

    if check_subscription.check_subscription(user_id):
        markup = menu_handlers.create_main_menu()
        bot.send_message(message.chat.id, "üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\nü§ô–ü—Ä–∏—Å—Ç–µ–≥–Ω–∏—Ç–µ —Ä–µ–º–Ω–∏, –≤–µ–¥—å —ç—Ç–æ –∏–≥—Ä–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö!", reply_markup=markup)
    else:
        # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
        markup = telebot.types.InlineKeyboardMarkup()
        channel_link_1 = telebot.types.InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 1", url=CHANNEL_LINK_1)
        channel_link_2 = telebot.types.InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 2", url=CHANNEL_LINK_2)
        check_button = telebot.types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_sub")
        markup.add(channel_link_1)
        markup.add(channel_link_2)
        markup.add(check_button)

        bot.send_message(message.chat.id, "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¥–≤–∞ –∫–∞–Ω–∞–ª–∞:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
@bot.callback_query_handler(func=lambda call: call.data == "check_sub")
def check_subscription_callback(call):
    user_id = call.from_user.id
    if check_subscription.check_subscription(user_id):
        markup = menu_handlers.create_main_menu()
        bot.send_message(call.message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É!", reply_markup=markup)
    else:
        bot.send_message(call.message.chat.id, "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers
menu_handlers.register_handlers(bot)
callback_handlers.register_handlers(bot)
check_subscription.bot = bot

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    logging.info("Bot starting...")
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")